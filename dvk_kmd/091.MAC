	.TITLE	KMDROM
	.IDENT	/091/
	.ASECT
	.=0
; Точка перехода при начальном запуске
1$:	CLR	R5		; Счетчик ошибок тестирования = 0
	BR	342$		; Переход на программу тестирования
4$:	.WORD	104$,340	; Вектор прерывания по ошибке канала (TRAP4)
10$:	.WORD	252$,340	; Вектор прерывания по рез.инструкц.(TRAP10)
	.WORD	1,1,1,1
24$:	.WORD	30$,340		; Вектор прерывания по ошибке питания
; Обработка прерывания по ошибке питания
30$:	MOV	#100012,R0	; R0 = ошибка - прерывание по вектору 24
	BR	256$		; Переход на обработку фатальных ошибок
	.WORD	1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
100$:	.WORD	274$,340	; Вектор прер.IRQ2(INIT на шине системы(ЦП))
; Обработка прерывания по ошибке канала (TRAP4)
104$:	CLR	@#177100	; Очистить регистр команд
	CLR	@#177130	; Очистить РСН (останов мотора, снятие выбора)
	TST	@#177132	; Перевести контроллер накоп.в режим чтения
	CMP	SP,#24000	; Указатель стека перевалил за 24000 ?
	BHI	176$		; Да - ошибка
	CMP	SP,#20000	; Указатель стека меньше 20000 ?
	BLO	176$		; Да - ошибка
	CMP	@SP,#3420$	; Прерывание при чтении массива параметров ?
	BEQ	164$		; Да
	CMP	@SP,#4742$	; Прер. во время записи(чтение из ОЗУ ЦП) ?
	BEQ	164$		; Да
	CMP	@SP,#6142$	; Прер. во время перед.загол.(запись ОЗУ ЦП) ?
	BEQ	164$		; Да
	CMP	@SP,#6734$	; Прер. во время чтения (запись ОЗУ ЦП) ?
	BNE	176$		; Нет
164$:	MOV	#100003,0(R3)	; РСО = TRAP4 во время операций чтения/записи
	JMP	7116$		; Прерывание операции и передача ответа
176$:	MOV	#100004,R0	; R0 = TRAP4 не во время операций чт./зап.
202$:	MOV	R0,@#177102	; Передать код ошибки в регистр данных
	MOV	#100040,@#177100; Устан. в РК биты ошибок и завершения
	MTPS	#0		; Разрешить прерывания
220$:	BIT	#40,@#177100	; Сброшен бит DONE (запись в РК с битом GO)
	BNE	220$		; Нет
	BIT	#40000,@#177100	; Запрошена инициализация КМД?
	BEQ	244$		; Нет
	JMP	@#10000		; Перезапуск с нуля
244$:	MTPS	#340		; Запретить прерывания
250$:	BR	202$		; На передачу ошибки в регистр команд
; Обработка прерывания по резервной инструкции (TRAP10)
252$:	MOV	#100000,R0	; R0 = ошибка - прерывание TRAP10
256$:	CLR	@#177100	; Очистить регистр команд
	CLR	@#177130	; Очистить РСН (останов мотора, снятие выбора)
	TST	@#177132	; Перевести контроллер накоп.в режим чтения
	BR	202$		; На передачу ошибки в регистр команд
; Обработка прерывания IRQ2 (сигнал INIT на шине вычислителя)
274$:	CLR	@#177100	; Очистить регистр команд
	CLR	@#177130	; Очистить РСН (останов мотора, снятие выбора)
	TST	@#177132	; Перевести контроллер накоп.в режим чтения
	CMP	@SP,#220$	; Адрес прерывания больше 220
	BHIS	322$		; Да
316$:	JMP	@#10000		; Перезапуск с нуля
322$:	CMP	@SP,#250$	; Адрес прерывания меньше 250
	BLOS	316$		; Да - на перезапуск
	MOV	R3,SP		; Указатель стека = R3 + 176
	ADD	#176,SP
	JMP	2566$		; Переход на прием очередной команды
; Программы тестирования ПЗУ, ОЗУ, процессора и регистров контроллера КМД
342$:	CLR	@#177100	; Очистить регистр команд
	CLR	@#177130	; Очистить РСН (останов мотора, снятие выбора)
	TST	@#177132	; Перевести контроллер накоп.в режим чтения
	MOV	#100000,R5	; Сч.ошиб.=0,R5[15]=1 - ПЗУ и ОЗУ не тестиров.
	MOV	#24000,SP	; SP = конечный адрес ОЗУ
; Тестирование ПЗУ (подсчет контрольной суммы)
366$:	CLR	R0		; Контрольная сумма = 0
	CLR	R1		; Начальный адрес = 0
	MOV	#4006,R2	; Количество слов (диапазон 0 - 10013)
376$:	ADD	(R1)+,R0	; Подсчет контрольной суммы ...
	ADC	R0		;   ... с прибавлением переноса
	SOB	R2,376$
	CMP	R0,@R1		; Она равна значению в ячейке 10014
	BEQ	440$		; Да - все в порядке
	CMPB	@#177716,#3	; Установлен технологический режим ?
	BNE	430$		; Нет
	INC	R5		; Увеличить счетчик ошибок
	CMPB	#37,R5		; Количество ошибок превысило 30?
	BHIS	366$		; Нет
430$:	MOV	#100002,R0	; R0 = ошибка - не совпадает контрол.сумма ПЗУ
434$:	JMP	202$		; На передачу ошибки в регистр команд
; Тестирование ОЗУ (поиск блока памяти объемом 128 байт)
440$:	TST	R5		; ОЗУ уже успешно прошло тесты?
	BPL	502$		; Да
	CMP	#24000,SP	; ОЗУ еще не тестировалось?
	BNE	456$		; Нет
	TST	-(SP)		; Уменьшить SP на 2
	BR	502$		; Переход на тестирование
456$:	CMP	#20176,SP	; Указатель стека на первом блоке памяти?
	BLO	476$		; Нет
	CMPB	@#177716,#3	; Установлен технологический режим ?
	BNE	744$		; Нет - ошибка - нет исправного блока
	BR	502$		; На тестирование
476$:	SUB	#200,SP		; Переход к следующему блоку
; Пословный тест бегущей единицей и бегущим нулем
502$:	MOV	SP,R1		; R1 = начало блока памяти
	SUB	#176,R1
	MOV	#100,R2		; R2 = объем блока в словах
514$:	MOV	#1,R0		; R0 = 1 (нач. установка бегущей единицы)
	MOV	R0,R3		; R3 = вид теста 1-бег.единица 0-бег.ноль
522$:	MOV	R0,@R1		; Записать значение в ОЗУ
	CMP	R0,@R1		; Сравнить с записанным
	BNE	720$		; Не совпало - ошибка
	TST	R3		; Какой тест?
	BEQ	550$		; Бегущий ноль
	ASL	R0		; Сдвинуть единицу на разряд влево
	BCC	522$		; Еще не окончили
	CLR	R3		; R3 = тест бегущего нуля
	MOV	#177776,R0	; R0 = 177776 (нач. установка бегущего нуля)
	BR	522$		; На тестирование
550$:	SEC			; Установить бит переноса
	ROL	R0		; Сдвинуть ноль на разряд влево
	BCS	522$		; Еще не окончили
	TST	(R1)+		; Переход к следующей ячейке
	SOB	R2,514$
; Пословный тест заполнения ячеек значением адреса в первом проходе и
; значением инверсного адреса во втором проходе. Сравнение после
; заполнения блока.
	MOV	SP,R1		; R1 = начало блока памяти
	SUB	#176,R1
	CLR	R3		; R3 = 0 - первый проход
572$:	MOV	#100,R2		; R2 = объем блока в словах
576$:	MOV	R1,R0		; R0 = адрес ячейки
	TST	R3		; Первый проход?
	BEQ	606$		; Да
	COM	R0		; Инвертировать адрес
606$:	MOV	R0,(R1)+	; Записать в ячейку
	SOB	R2,576$
	MOV	#100,R2		; R2 = объем блока в словах
616$:	CMP	R0,-(R1)	; Сравнить записанное
	BNE	720$		; Не равно
	MOV	R1,R0		; R0 = адрес предыдущей ячейки
	SUB	#2,R0                                                        
	TST	R3		; Первый проход?
	BEQ	636$		; Да
	COM	R0		; Инвертировать адрес
636$:	SOB	R2,616$
	COM	R3		; Сменить проход  0 -> 177777 или 177777 -> 0
	BNE	572$		; На второй проход
; Побайтовый тест с записью 377 и 0 в первом проходе и 0 и 377 во втором
; Сравнение производится после заполнения блока.
	MOV	#377,R0		; R0 = 377 0 (для первого прохода)
	MOV	SP,R1		; R1 = начало блока памяти
	SUB	#176,R1
656$:	MOV	#100,R2		; R2 = объем блока в словах
662$:	MOVB	R0,(R1)+	; Занести младш. байт R0 в младший байт ячейки
	SWAB	R0		; Обменять байты в R0
	MOVB	R0,(R1)+	; Занести в старший байт ячейки
	SWAB	R0		; Обменять байты в R0
	SOB	R2,662$
	MOV	#100,R2		; R2 = объем блока в словах
700$:	CMP	R0,-(R1)	; Сравнить со считанным
	BNE	720$		; Не совпадает
	SOB	R2,700$
	SWAB	R0		; Обменять для второго прохода
	BEQ	656$		; Переход для второго прохода
	BIC	#100000,R5	; R5[15] = 0, тест ПЗУ и ОЗУ прошел успешно
	BR	752$		; На тест процессора
720$:	CMPB	@#177716,#3	; Установлен технологический режим ?
	BNE	456$		; Нет - на тестирование следующего блока
	TST	R5		; Тест ПЗУ и ОЗУ проходил успешно?
	BMI	456$		; Нет - на тестирование следующего блока
	INC	R5		; Увеличить счетчик ошибок
	CMP	#37,R5		; Количество ошибок превысило 30?
	BHIS	366$		; Нет - на тест ПЗУ
744$:	MOV	#100001,R0	; R0 = ошибка - нет исправных блоков ОЗУ
        BR	434$		; На передачу ошибки в регистр команд
; Тестирование процессора
752$:	CCC			; N=0 Z=0 V=0 C=0
	BCS	774$		; C=1? Да - ошибка
	BVS	774$		; V=1? Да - ошибка
	BEQ	774$		; Z=1? Да - ошибка
	BMI	774$		; N=1? Да - ошибка
	BLT	774$		; (N xor V)=1? Да - ошибка
	BLE	774$		; ((N xor V) or Z)=1? Да - ошибка
	BLOS	774$		; (C or Z)=1? Да - ошибка
	BHI	1000$		; (C or Z)=0? Да - OK
774$:	JMP	2166$		; Ошибка процессора
1000$:	SEV			; N=1 Z=0 V=1 C=0
	SEN
	BVC	1014$		; V=0? Да - ошибка
	BLT	1014$		; (N xor V)=1? Да - ошибка
	BLE	1014$		; ((N xor V) or Z)=1? Да - ошибка
	BGE	1020$		; (N xor V)=0? Да - OK
1014$:	JMP	2166$		; Ошибка процессора
1020$:	SEZ			; N=1 Z=1 V=1 C=1
	SEC
	BNE	1034$		; Z=0? Да - ошибка
	BGT	1034$		; ((N xor V) or Z)=0? Да - ошибка
	BHI	1034$		; (C or Z)=0? Да - ошибка
	BLE	1040$		; ((N xor V) or Z)=1? Да - OK
1034$:	JMP	2166$		; Ошибка процессора
1040$:	MOV	SP,R3		; R3 = BRAM+176
	CLR	@R3		; [BRAM+176] = 0
	MOV	R3,R0		; R0 = BRAM+176
	TST	-(R3)		; R3 = BRAM+174
	MOV	R0,@R3		; [BRAM+174] = BRAM+176
	MOV	R3,R4		; R4 = [BRAM+174]
	CCC			; N=0 Z=0 V=0 C=0
	TST	@(R3)+		; [BRAM+176]=0? R3 = BRAM+176 NZVC=0100
	BEQ	1066$		; Да
	JMP	2166$		; Ошибка процессора
1066$:	SEC			; C=1
	ROR	@-(R3)		; [BRAM+176] = 100000 R3 = BRAM+174 NZVC=1010
	BCS	1100$		; C=1? Да - ошибка
	BVC	1100$		; V=0? Да - ошибка
	BMI	1104$		; N=1? Да - OK
1100$:	JMP	2166$		; Ошибка процессора
1104$:	CCC			; N=0 Z=0 V=0 C=0
	ASR	@(R4)+		; [BRAM+176] = 140000 R4 = BRAM+176 NZVC=1010
	BVC	1114$		; V=0? Да - ошибка
	BMI	1120$		; N=1? Да - OK
1114$:	JMP	2166$		; Ошибка процессора
1120$:	CLN			; N=0
	ASL	@(R3)+		; [BRAM+176] = 100000 R3 = BRAM+176 NZVC=1001
	BCC	1132$		; C=0? Да - ошибка
	BVS	1132$		; V=1? Да - ошибка
	BMI	1136$		; N=1? Да - OK
1132$:	JMP	2166$		; Ошибка процессора
1136$:	SCC			; N=1 Z=1 V=1 C=1
	DEC	@-(R4)		; [BRAM+176] = 077777 R4 = BRAM+174 NZVC=0011
	BCC	1152$		; C=0? Да - ошибка
	BVC	1152$		; V=0? Да - ошибка
	BEQ	1152$		; Z=1? Да - ошибка
	BPL	1156$		; N=0? Да - OK
1152$:	JMP	2166$		; Ошибка процессора
1156$:	NEG	@-(R3)		; [BRAM+176] = 100001 R3 = BRAM+174 NZVC=1001
	BCC	1166$		; C=0? Да - ошибка
	BVS	1166$		; V=1? Да - ошибка
	BMI	1172$		; N=1? Да - OK
1166$:	JMP	2166$		; Ошибка процессора
1172$:	SEV			; V=1
	COM	@(R4)+		; [BRAM+176] = 077776 R4 = BRAM+176 NZVC=0001
	BCC	1202$		; C=0? Да - ошибка
	BVC	1206$		; V=0? Да - OK
1202$:	JMP	2166$		; Ошибка процессора
1206$:	INC	@(R3)+		; [BRAM+176] = 077777 R3 = BRAM+176 NZVC=0001
	BCC	1214$		; C=0? Да - ошибка
	BPL	1220$		; N=0? Да - OK
1214$:	JMP	2166$		; Ошибка процессора
1220$:	ADC	@-(R4)		; [BRAM+176] = 100000 R4 = BRAM+174 NZVC=1010
	BCS	1230$		; C=1? Да - ошибка
	BVC	1230$		; V=0? Да - ошибка
	BMI	1234$		; N=1? Да - OK
1230$:	JMP	2166$		; Ошибка процессора
1234$:	CCC			; N=0 Z=0 V=0 C=0
	ROL	@(R4)+		; [BRAM+176] = 000000 R4 = BRAM+176 NZVC=0111
	BCC	1246$		; C=0? Да - ошибка
	BVC	1246$		; V=0? Да - ошибка
	BEQ	1252$		; Z=1? Да - OK
1246$:	JMP	2166$		; Ошибка процессора
1252$:	INC	@-(R3)		; [BRAM+176] = 000001 R3 = BRAM+174 NZVC=0001
	SBC	@-(R4)		; [BRAM+176] = 000000 R4 = BRAM+174 NZVC=0100
	BCS	1262$		; C=1? Да - ошибка
	BEQ	1266$		; Z=1? Да - OK
1262$:	JMP	2166$		; Ошибка процессора
1266$:	MOV	SP,R2		; R2 = BRAM+176
	MOV	R2,R0		; R0 = BRAM+176
	CLR	@R0		; [BRAM+176] = 000000 NZVC=0100
	TST	-(R2)		; R2 = BRAM+174
	TST	-(R2)		; R2 = BRAM+172
	MOV	R0,(R2)+	; [BRAM+172] = BRAM+176 R2 = BRAM+174
	INC	R0		; R0 = BRAM+177
	MOV	R0,(R2)+	; [BRAM+174] = BRAM+177	R2 = BRAM+176
	MOV	R2,R0		; R0 = BRAM+176
	MOV	R2,R1		; R1 = BRAM+176
	COMB	@-(R2)		; [BRAM+177] = 377 R2 = BRAM+174 NZVC=1001
	BCC	1320$		; C=0? Да - ошибка
	BMI	1324$		; N=1? Да - OK
1320$:	JMP	2166$		; Ошибка процессора
1324$:	TSTB	@-(R2)		; [BRAM+176]=000? R2 = BRAM+172 NZVC=0100
	BEQ	1334$		; Да
	JMP	2166$		; Ошибка процессора
1334$:	SEV			; V=1
	ASRB	@-(R1)		; [BRAM+177] = 377 R1 = BRAM+174 NZVC=1001
	BCC	1346$		; C=0? Да - ошибка
	BVS	1346$		; V=1? Да - ошибка
	BMI	1352$		; N=1? Да - OK
1346$:	JMP	2166$		; Ошибка процессора
1352$:	INCB	@(R2)+		; [BRAM+176] = 001 R2 = BRAM+174 NZVC=0001
	BCC	1360$		; C=0? Да - ошибка
	BPL	1364$		; N=0? Да - OK
1360$:	JMP	2166$		; Ошибка процессора
1364$:	CLC			; C=0
	RORB	@-(R1)		; [BRAM+176] = 000 R1 = BRAM+172 NZVC=0111
	BCC	1400$		; C=0? Да - ошибка
	BVC	1400$		; V=0? Да - ошибка
	BNE	1400$		; Z=0? Да - ошибка
	BPL	1404$		; N=0? Да - OK
1400$:	JMP	2166$		; Ошибка процессора
1404$:	ASLB	@(R2)+		; [BRAM+177] = 376 R2 = BRAM+176 NZVC=1001
	BCC	1414$		; C=0? Да - ошибка
	BVS	1414$		; V=1? Да - ошибка
	BMI	1420$		; N=1? Да - OK
1414$:	JMP	2166$		; Ошибка процессора
1420$:	ADCB	@-(R2)		; [BRAM+177] = 377 R2 = BRAM+174 NZVC=1000
	BCS	1426$		; C=1? Да - ошибка
	BMI	1432$		; N=1? Да - OK
1426$:	JMP	2166$		; Ошибка процессора
1432$:	SCC			; N=1 Z=1 V=1 C=1
	ROLB	@(R1)+		; [BRAM+176] = 001 R1 = BRAM+174 NZVC=0000
	BLOS	1444$		; (C or Z)=1? Да - ошибка
	BVS	1444$		; V=1? Да - ошибка
	BPL	1450$		; N=0? Да - OK
1444$:	JMP	2166$		; Ошибка процессора
1450$:	SWAB	@-(R2)		; [BRAM+176 177]=377 001 R2=BRAM+172 NZVC=1000
	BMI	1460$		; N=1? Да - OK
	JMP	2166$		; Ошибка процессора
1460$:	SEC			; C=1
	SBCB	@(R1)+		; [BRAM+177] = 000 R1 = BRAM+176 NZVC=0100
	BCS	1470$		; C=1? Да - ошибка
	BEQ	1474$		; Z=1? Да - OK
1470$:	JMP	2166$		; Ошибка процессора
1474$:	NEGB	@(R2)+		; [BRAM+176] = 001 R2 = BRAM+174 NZVC=0001
	DECB	@-(R2)		; [BRAM+176] = 000 R2 = BRAM+172 NZVC=0101
	BCC	1504$		; C=0? Да - ошибка
	BEQ	1510$		; Z=1? Да - OK
1504$:	JMP	2166$		; Ошибка процессора
1510$:	MOV	SP,R0		; R0 = BRAM+176
	MOV	R0,R1		; R1 = BRAM+176
	CMP	-(R1),-(R1)	; R1 = BRAM+172
	MOV	R0,@R1		; [BRAM+172] = BRAM+176
	MOV	R1,R2		; R2 = BRAM+172
	MOV	R0,R4		; R4 = BRAM+176
	TST	-(R0)		; R0 = BRAM+174
	MOV	R0,R3		; R3 = BRAM+174
	MOV	R0,-(R2)	; [BRAM+170] = BRAM+174 R2 = BRAM+170
	CLR	@R3		; [BRAM+174] = 000000
	CLR	@R4		; [BRAM+176] = 000000
	SCC			; N=1 Z=1 V=1 C=1
	CLZ			; Z=0
	SUB	@(R2)+,@(R1)+	; [B+176]=0 R1=BRAM+174 R2=BRAM+172 NZVC=0100
	BCS	1552$		; C=1? Да - ошибка
	BVS	1552$		; V=1? Да - ошибка
	BEQ	1556$		; Z=1? Да - OK
1552$:	JMP	2166$		; Ошибка процессора
1556$:	BIS	#100000,@-(R2)	; [BRAM+174] = 100000 R2 = BRAM+170 NZVC=1000
	ADD	#1,@-(R1)	; [BRAM+176] = 000001 R1 = BRAM+172 NZVC=0000
	SUB	@(R2)+,@(R1)+	; [B+176]=100001 R1=B+174 R2=B+172 NZVC=1011
	BCC	1576$		; C=0? Да - ошибка
	BVC	1576$		; V=0? Да - ошибка
	BMI	1602$		; N=1? Да - OK
1576$:	JMP	2166$		; Ошибка процессора
1602$:	NEG	@R4		; [BRAM+176]=077777 NZVC=0001
	BIT	@-(R2),@-(R1)	; [B174]100000&[B176]77777 R1=B172 R2=B170 0101
	BEQ	1614$		; Z=1? Да - OK
	JMP	2166$		; Ошибка процессора
1614$:	CMP	@(R2)+,@(R1)+	; [B174]100000-[B176]77777 R1=B174 R2=B172 0010
	BVS	1624$		; V=1? Да - OK
	JMP	2166$		; Ошибка процессора
1624$:	COM	@-(R2)		; [BRAM+174] = 077777 R2=BRAM+170 NZVC=0001
	CCC			; N=0 Z=0 V=0 C=0
	ADD	@(R2)+,@-(R1)	; [B176]=177776 R1=B172 R2=B172 NZVC=1010
	BVC	1636$		; V=0? Да - ошибка
	BMI	1642$		; N=1? Да - OK
1636$:	JMP	2166$		; Ошибка процессора
1642$:	SEC			; C=1
	BIC	@-(R2),@(R1)+	; [B176]=100000 R1=B174 R2=B170 NZVC=1001
	BCC	1652$		; C=0? Да - ошибка
	BMI	1656$		; N=1? Да - OK
1652$:	JMP	2166$		; Ошибка процессора
1656$:	COM	@-(R1)		; [BRAM+176] = 077777 R1 = BRAM+172 NZVC=0001
	CMP	@(R2)+,@(R1)+	; [B174]77777-[B176]77777 R1=B174 R2=B172 0100
	BEQ	1670$		; Z=1? Да - OK
	JMP	2166$		; Ошибка процессора
1670$:	MOV	SP,R0		; R0 = BRAM+176
	MOV	R0,R3		; R3 = BRAM+176
	MOV	R3,R1		; R1 = BRAM+176
	TST	-(R3)		; R3 = BRAM+174
	MOV	R0,-(R3)	; [BRAM+172] = BRAM+176 R3 = BRAM+172
	INC	@R3		; [BRAM+172] = BRAM+177
	MOV	R0,-(R3)	; [BRAM+170] = BRAM+176 R3 = BRAM+170
	MOV	R3,R4		; R4 = BRAM+170
	TST	-(R0)		; R0 = BRAM+174
	MOV	R0,-(R4)	; [BRAM+166] = BRAM+174 R4 = BRAM+166
	INC	@R4		; [BRAM+166] = BRAM+175
	MOV	R0,-(R4)	; [BRAM+164] = BRAM+174 R4 = BRAM+164
	SEC			; C=1
	MOV	#177001,@(R4)+	; [B174]=001 [B175]=376 R4=B166 NZVC=1001
	MOVB	#200,@(R4)+	; [BRAM+175] = 200 R4 = BRAM+170 NZVC=1001
	MOVB	@-(R4),@(R3)+	; [BRAM+176] = 200 R3=B172 R4=B166 NZVC=1001
	MOVB	@-(R4),@(R3)+	; [BRAM+177] = 001 R3=B174 R4=B164 NZVC=0001
	BCS	1744$		; C=1? Да - OK
	JMP	2166$		; Ошибка процессора
1744$:	CMP	#600,@R1	; [BRAM+176]=000600? NZVC=0100
	BEQ	1756$		; Да
	JMP	2166$		; Ошибка процессора
1756$:	CMP	-(R3),-(R3)	; R3 = BRAM+170
	BISB	@(R4)+,@(R3)+	; [BRAM+176] = 201 R3=B172 R4=B166
	BISB	@(R4)+,@(R3)+	; [BRAM+177] = 201 R3=B174 R4=B170
	CMP	#100601,@R1	; [BRAM+176]=100601? NZVC=0100
	BEQ	1776$		; Да
	JMP	2166$		; Ошибка процессора
1776$:	BICB	@-(R4),@-(R3)	; [BRAM+177] = 001 R3=B172 R4=B166
	BICB	@-(R4),@-(R3)	; [BRAM+176] = 200 R3=B170 R4=B164
	BITB	@(R4)+,@(R3)+	; [B174]001&[B176]200 R3=B172 R4=B166 NZVC=0100
	BNE	2012$		; Z=0? Да - ошибка
	BITB	@-(R4),@(R3)+	; [B174]001&[B177]001 R3=B174 R4=B164 NZVC=0000
	BNE	2016$		; Z=0? Да - OK
2012$:	JMP	2166$		; Ошибка процессора
2016$:	CMPB	@(R4)+,@-(R3)	; [B174]001-[B177]001 R3=B172 R4=B166 NZVC=0100
	BNE	2026$		; Z=0? Да - ошибка
	CMPB	@(R4)+,@-(R3)	; [B175]200-[B176]200 R3=B174 R4=B164 NZVC=0100
	BEQ	2032$		; Z=1? Да - OK
2026$:	JMP	2166$		; Ошибка процессора
2032$:	MOV	PC,R0		; R0 = 2040
	ADD	#<2046$-.>,R0	; R0 = 2052
	SCC			; N=1 Z=1 V=1 C=1
	JMP	@R0		; Переход на 2046
2044$:	BR	2052$		; Переход на 2052
2046$:	CLN			; N=0
	BR	2044$		; Переход на 2044
2052$:	BCC	2062$		; C=0? Да - ошибка
	BVC	2062$		; V=0? Да - ошибка
	BNE	2062$		; Z=0? Да - ошибка
	BPL	2066$		; N=0? Да - OK
2062$:	JMP	2166$		; Ошибка процессора
2066$:	CLR	R2		; R2 = 0
	MOV	PC,R4		; R4 = 2072
	MOV	R4,R0		; R0 = 2072
	BR	2102$		; Переход на 2102
2076$:	COM	R2		; R2 = 177777 NZVC=1001
	BR	2110$		; Переход на 2110
2102$:	CMP	(R4)+,(R4)+	; R4 = 2076
	TST	(R4)+		; R4 = 2100
	JMP	-(R4)		; Переход на 2076 R4 = 2076
2110$:	INC	R2		; R2 = 000000 NZVC=0111
	BNE	2122$		; Z=0? Да - ошибка
	CMP	(R0)+,(R0)+	; R0 = 2076
	CMP	R0,R4		; R0 и R4 равны?
	BEQ	2126$		; Да
2122$:	JMP	2166$		; Ошибка процессора
2126$:	MOV	#2150$,R2	; R2 = 2150
	SCC			; N=1 Z=1 V=1 C=1
	CLV			; V=0
	JSR	R1,@R2		; Вызов п/п 2150 R1=2140
	TST	R2		; R2 равен нулю?
	BNE	2166$		; Нет - ошибка
	BR	2222$		; На тест регистров РК и РД
2146$:	RTS	R1		; Возврат в 2140
2150$:	BCC	2164$		; C=0? Да - ошибка
	BVS	2164$		; V=1? Да - ошибка
	BNE	2164$		; Z=0? Да - ошибка
	BPL	2164$		; N=0? Да - ошибка
	CLR	R2		; R2 = 0
	BR	2146$		; Переход на 2146
2164$:	TST	(SP)+		; Убрать из стека адрес возврата
2166$:	CMPB	@#177716,#3	; Установлен технологический режим ?
	BNE	2212$		; Нет
	INC	R5		; Увеличить счетчик ошибок
	CMP	#37,R5		; Количество ошибок превысило 30?
	BLO	2212$		; Да
	JMP	366$		; На начало тестов
2212$:	MOV	#100005,R0	; R0 = ошибка - ошибка процессора
	JMP	434$		; На передачу ошибки в регистр команд
; Тестирование регистра команд и регистра данных
2222$:	CMPB	@#177716,#3	; Установлен технологический режим ?
	BEQ	2236$		; Да
	CALL	2670$		; Очистить РК и РД
2236$:	MOV	#177100,R2	; R2 = адрес регистра команд
	TST	@R2		; Значение РК равно нулю?
	BEQ	2254$		; Да
2246$:	MOV	#100006,R0	; R0 = ошибка - ошибка регистра команд
	BR	2366$
2254$:	MOV	#177737,@R2	; Занести в регистр команд 177737
	CMP	#100200,(R2)+	; Считавается 100200? R2=адрес рег.данных
	BNE	2246$		; Нет - ошибка
	CLR	@R2		; Очистить регистр данных
	TST	@R2		; Регистр данных очищен?
	BEQ	2302$		; Да
2274$:	MOV	#100007,R0	; R0 = ошибка - ошибка регистра данных
	BR	2366$
2302$:	DEC	@R2		; Регистр данных = 177777
	CMP	#177777,@R2	; Значение РД = 177777?
	BNE	2274$		; Нет - ошибка
; Тестирование регистров контроллера накопителя
	MOV	#177130,R2	; R2 = адрес РСН
	MOV	@R2,R1		; R1 = значение РСН
	CMPB	@#177716,#3	; Установлен технологический режим ?
	BNE	2412$		; Нет
	RESET			; СБРОС
	TST	@R2		; Значение РСН равно нулю
	BEQ	2344$		; Да
2336$:	MOV	#100010,R0	; R0 = ошибка - ошибка РСН накопителя
	BR	2366$
2344$:	MOV	#177777,@R2	; Занести в РСН 177777
	CMP	#100007,@R2	; Считывается 100007 из РСН?
	BNE	2336$		; Нет - ошибка
	MOV	R1,(R2)+	; Занести старое значение РСН R2=адрес РДН
	TST	@R2		; Перевести контроллер в режим чтения
	DEC	@R2		; Перевести контроллер в режим записи
	BR	2420$
2366$:	CMPB	@#177716,#3	; Установлен технологический режим ?
	BNE	2406$		; Нет
	INC	R5		; Увеличить счетчик ошибок
	CMP	#37,R5		; Количество ошибок превысило 30?
	BHIS	2420$		; Нет
2406$:	JMP	202$
2412$:  TST	(R2)+		; R2 = адрес РДН
	TST	@R2		; Перевести контроллер в режим чтения
	BR	2436$
2420$:	COM	@#177130
	BIC	#177774,@#177130
	JMP	366$		; На начало тестов
; Инициализация начальных значений
2436$:	MOV	SP,R3		; R3 = начальный адрес использ.блока ОЗУ
	SUB	#176,R3
	MOVB	#5,60(R3)	; Сектор ищется за 5 оборотов диска
	MOVB	@#177716,R0	; R0 = значение условий режима работы из РНП
	BEQ	2512$		; Установлен для НГМД-6022 (40 дорожек)
; Начальные значения для НГМД-6121 (80 дорожек)
	MOV	#14140,20(R3)	; Установка времени опускания головки (30 мс)
	MOV	#14140,22(R3)	; Установка времени подъема головки (30 мс)
	MOV	#1274,24(R3)	; Установка времени перехода (3 мс)
	MOVB	#120,54(R3)	; Дорожка, где включается прекорректор (80)
	BR	2542$
; Начальные значения для НГМД-6022 (40 дорожек)
2512$:	MOV	#20200,20(R3)	; Установка времени опускания головки (40 мс)
	MOV	#20200,22(R3)	; Установка времени подъема головки (40 мс)
	MOV	#6060,24(R3)	; Установка времени перехода (15 мс)
	MOVB	#30,54(R3)	; Дорожка, где включается прекорректор (24)
; Дальнейшая инициализация, не зависящая от типа дисководов
2542$:	CLR	2(R3)		; Очистить копию РСН
	CLR	0(R3)		; Очистить регистр состояния и ошибок
	MOVB	#377,46(R3)	; Номер текущего привода не определен
	MOV	#200,12(R3)	; Размер сектора по умолчанию - 256 байт
2566$:	MTPS	#340		; Запретить прерывания
	MOV	R3,SP		; Восстановить указатель стека
	ADD	#176,SP
	CALL	2670$		; Очистить РК и РД
	MOV	#177130,R4	; R4 = адрес РСН
	BIC	#177700,2(R3)	; Очистить в копии РСН биты DIR,ST,GOR,WM,REZ
	MOV	2(R3),@R4	; Записать в контроллер
	MOV	#47,R0		; R0 = указатель на область 47-52
	ADD	R3,R0
	MOV	#4,R1
2634$:	MOVB	#377,(R0)+	; Номера дорожек не определены
	SOB	R1,2634$
	BIC	#174177,0(R3)	; Очистить все биты РСО, кроме 7-10
	BIS	#4,0(R3)	; Начальная установка завершена
	MOV	#40,R1		; Установить в R1 бит DONE
	MTPS	#0		; Разрешить прерывания
	BR	2716$		; На основной цикл приема команды
; Подпрограмма очистки РК (со стороны КМД и вычислителя) и РД
2670$:	MOV	#177100,R2	; R2 = адрес РК
	CLR	@R2		; Очистить регистр команд
	MOV	#177777,@#177102; Уст. "окно" на диапазон 17740000-17777777
	CLR	@#72140		; Очистить РК со стороны вычислителя
	CLR	@#177102	; Очистить РД
	RETURN
; Основной цикл приема команды
2716$:	MOV	R3,SP		; Восстановить указатель стека
	ADD	#176,SP
	MOV	#177100,R2	; R2 = адрес РК
	MOV	#177130,R4	; R4 = адрес РСН
	CLRB	57(R3)		; Счетчик оборотов диска = 0
	MOV	0(R3),@#177102	; Передать РСО в РД
	MOV	R1,@R2		; Передать R1 в РК
2750$:	MOV	#47040,R0	; R0 - кол-во циклов без индекса
2754$:	BIT	#40,@R2		; Была записана новая команда?
	BEQ	3044$		; Да
	BIT	#20,2(R3)	; Двигатель еще вращается?
	BEQ	2754$		; Нет
	TST	@R4		; Линия ИНДЕКС активна?
	BMI	3006$		; Да
	SOB	R0,2754$
3000$:	CALL	7062$		; Выключить мотор
	BR	2754$		; Продолжить цикл
3006$:	CMPB	#17,57(R3)	; Число оборотов диска превысило 15 (3 сек)?
	BLOS	3000$		; Да - выключить мотор
	INCB	57(R3)		; Увеличить счетчик
	MOV	#764,R0		; R0 = кол-во циклов длины ИНДЕКСА
3026$:	BIT	#40,@R2		; Была записана новая команда?
	BEQ	3044$		; Да
	TST	@R4		; Линия ИНДЕКС активна?
	BPL	2750$		; Нет
	SOB	R0,3026$
	BR	3000$		; На выключение мотора
3044$:	MOV	@R2,R5		; R5 = новое значение РК
	BIT	#40000,R5	; Установлен бит INIT?
	BEQ	3060$		; Нет
3054$:	JMP	2566$		; На инициализацию
; Обработка полученного кода функции
3060$:  BIC	#177740,R5	; Оставить биты кода команды и GO
; Обработка кода 12 (перезапуск КМД)
	CMPB	#25,R5		; Запрошен перезапуск (команда 12)?
	BNE	3076$		; Нет
	JMP	@#10000		; Перезапуск КМД
; Обработка кода 11 (чтение регистра состояния и ошибок)
3076$:	CMPB	#23,R5		; Запрошено чтение РСО (команда 11)?
	BNE	3120$		; Нет
3104$:	MOV	0(R3),@#177102	; Передать РСО в РД
	MOV	#40,R1		; Установить в R1 бит DONE
	BR	2716$		; На начало цикла
; Запрос адреса МП в РД
3120$:	MOV	#200,@R2	; Установить бит TR в РК
3124$:	TSTB	@R2		; Слово адреса параметров передано?
	BPL	3140$		; Нет
	BIT	#40000,@R2	; Установлен бит INIT?
	BEQ	3124$		; Нет
	BR	3054$		; На инициализацию
3140$:	MOV	@#177102,R1	; R1 = адрес массива параметров
; Дальнейшая обработка кода функции
	BIC	#174177,0(R3)	; Очистить РСО
	ASRB	R5		; Убрать бит GO, оставить только код команды
	MOVB	R5,45(R3)	; Сохранить код команды
; Начальная обработка кода 7 (SEEK)
	CMPB	#7,R5		; Запрошена команда SEEK?               
	BNE	3200$           ; Нет                                   
	MOV	R1,R0           ; R0 = номер дорожки(15-08), диска (1-0)
	SWAB	R0              ; Обмен байтов в R0                     
	MOVB	R0,53(R3)       ; Сохранить номер дорожки               
	BR	3542$           ; На дальнейшую обработку               
; Начальная обработка кода 6 (форматирование в формате ISO)
3200$:	CMPB	#6,R5		; Запрошено форматирование?
	BNE	3240$           ; Нет                      
	CLR	14(R3)          ; Сторона/дорожка = 0      
	MOVB	R1,55(R3)       ; Сохранить номер диска,сто
	SWAB	R1                                         
	MOVB	R1,34(R3)       ; Сохранить заполнитель    
	SWAB	34(R3)
	MOVB	R1,34(R3)
	SWAB	R1
	BR	3512$
; Начальная обработка кода 17 (LOAD)
3240$:	CMPB	#17,R5		; Запрошена команда LOAD?
	BNE	3314$		; Нет
	BIC	#177774,R1	; R1 = номер устройства загрузки
	CLRB	53(R3)		; Запрашивается нулевая дорожка
	MOVB	#1,55(R3)	; Запрашивается сектор 1
	MOV	#400,6(R3)	; Надо считать 256 слов (512 байт, 1 блок)
	CLR	4(R3)		; Считать по нулевому адресу
	CLRB	44(R3)
	CLR	14(R3)		; Сторона = НИЗ, дорожка = 0
	CLRB	45(R3)		; Код запроса = 0 (READ)
	BR	3512$		; На обработку
; Чтение массива параметров из ОЗУ вычислителя в ОЗУ КМД
3314$:	CMPB	#10,R5		; Код запроса равен 10 (SET)?
	BLO	3104$		; Больше 10 - на передачу ответа
	BNE	3330$		; Не равен 10
	JMP	6144$		; На обработку запроса SET
3330$:	MOV	R5,R0		; R0 = расш. часть адреса (в R1 основная)
	SWAB	R0
	CALL	7166$		; Преобраз. в формат "окна" (R2-адрес "окна")
	CMPB	#4,R5		; Код функции меньше 4?
	BLOS	3354$		; Да
	MOV	#4,R1		; Надо прочесть 4 слова МП (коды 0-3)
	BR	3360$
3354$:	MOV	#2,R1		; Надо прочесть 2 слова МП (остальные коды)
3360$:	MOV	#34,R0		; R0 = адрес расположения МП
	ADD	R3,R0
3366$:	TST	R2		; Перешли за границу "окна"?
	BPL	3416$		; Нет
	ROR	R2		; На начало "окна"
	ADD	#401,@#177102	; Увеличить адрес старшей части "окна"
	BNE	3416$		; Еще не перешли границу памяти
	BIS	#4000,0(R3)	; Установить ошибку адреса в РСО
	JMP	7116$		; Завершить операцию с ошибкой
3416$:	MOV	(R2)+,(R0)+	; Переслать очередное слово МП
3420$:	SOB	R1,3366$
; Разбор массива параметров
	CMPB	#4,R5		; Код функции меньше 4?
	BLOS	3500$		; Нет
	MOV	-(R0),6(R3)	; Сохранить кол-во слов массива данных
	BNE	3442$		; Не равно нулю
	JMP	7124$		; Завершить операцию успешно
3442$:	MOVB	-(R0),R1	; R1 = номер запрашиваемой дорожки
	MOVB	R1,53(R3)	; Сохранить номер запрашиваемой дорожки
	SWAB	R1		; Преобразовать в формат дорожка/сторона
	CLRB	R1
	MOV	R1,14(R3)	; Сохранить в формате дорожка/сторона
	MOVB	-(R0),55(R3)	; Сохранить номер запрашиваемого сектора
	BNE	3500$		; Не равен нулю
	BIS	#40000,0(R3)	; Установить ошибку массива параметров
	JMP	7116$		; Завершить операцию с ошибкой
3500$:	MOV	-(R0),4(R3)	; Сохранить мл.часть адреса массива данных
	MOVB	-(R0),44(R3)	; Сохранить расш.часть адреса массива данных
	MOVB	-(R0),R1	; R1 = поверхность (2),номер привода(1-0)
3512$:	BIT	#4,R1		; Запрошена верхняя сторона?
	BEQ	3534$		; Нет
	BIS	#40,2(R3)	; Установить верхнюю сторону в копии РСН
	INC	14(R3)		; Установить ВЕРХ в формате дорожка/сторона
	BR	3542$
3534$:	BIC	#40,2(R3)	; Установить нижнюю сторону в копии РСН
; Запуск мотора, смена текущего привода
3542$:	BIC	#177774,R1	; R1 = номер запрашиваемого привода
	BIT	#20,2(R3)	; Мотор еще вращается?
	BEQ	3566$		; Нет
	CMPB	R1,46(R3)	; Номер запраш. и текущего приводов равны?
	BNE	3612$		; Нет
	BR	3744$		; Да - равны
; Запуск мотора
3566$:	BIS	#20,2(R3)	; Установить в копии РСН бит запуска мотора
	MOV	2(R3),@R4       ; Передать команду в контроллер
	CLR	R0
3602$:	DEC	R0              ; Цикл ожидания раскрутки мотора
	NOP
	NOP
	BNE	3602$
; Смена привода
3612$:	BIC	#17,2(R3)	; Очистить биты привода в копии РСН
	BIC	#1400,0(R3)	; Очистить биты привода в РСО
	BISB	7640$(R1),2(R3)	; Установить биты выбора привода в копии РСН
	MOV	2(R3),@R4	; Дать команду контроллеру
	MOVB	R1,46(R3)	; Сохранить запрошенный номер привода
	MOV	R1,R0		; R0 = адрес текущ.дорожки для выбр. привода
	ADD	#47,R0
	ADD	R3,R0
	MOV	R0,10(R3)	; Сохранить адрес текущей дорожки
	SWAB	R1
	BIS	R1,0(R3)        ; Установить биты выбора привода в РСО      
; Проверка присутствия дискеты
	TST	@R4		; Линия ИНДЕКС активна?
	BPL	3710$		; Нет
	MOV	#1750,R0	; R0 - длина линии ИНДЕКС в цикле
3676$:	TST	@R4		; Линия ИНДЕКС активна?
	BPL	3724$		; Нет
	SOB	R0,3676$
3704$:	JMP	7112$		; Дискета не обнаружена (выкл.мотор и ошибка)
3710$:	MOV	#51010,R0	; R0 - длина дорожки вне ИНДЕКСА
3714$:	TST	@R4		; Линия ИНДЕКС активна?
	BMI	3724$		; Да
	SOB	R0,3714$
	BR	3704$		; Дискета не обнаружена (выкл.мотор и ошибка)
3724$:	BIS	#200,0(R3)	; Устан. признак присутствия дискеты в РСО
	MOV	20(R3),R0	; R0 = время опускания головки
3736$:	SOB	R0,3736$	; Ожидание опускания головки
	MOV	2(R3),@R4	; Передать в контроллер копию РСН
; Вызов обработчиков запрошенных функций
3744$:	CLR	30(R3)		; Установить признак чтения информации
	CLRB	61(R3)		; Чтение без метки
	MOV	R4,R5		; R5 = адрес РДН
	TST	(R5)+
	MOVB	45(R3),R0	; Переход на обработку запрошенной функции
	ASL	R0
	JMP	@3772$(R0)
; Адреса программ обработки функций
; RD (чтение), WR (запись), RDM (чтение с меткой), WRM (запись с меткой)
; RDTR (чтение дорожки), RDID (чтение заголовка), FORMAT (форматирование
; в стандарте ISO), выбор дорожки (SEEK)
3772$:	.WORD	4064$,4032$,4012$,4022$,4070$,5760$,5012$,7330$
; Чтение с меткой
4012$:	MOVB	#1,61(R3)	; Установить признак чтения с меткой
	BR	4064$		; На чтение сектора
; Запись с меткой
4022$:	MOV	#174241,16(R3)	; Будет записываться метка 0xF8A1
	BR	4040$		; На запись сектора
; Запись без метки
4032$:	MOV	#175641,16(R3)	; Будет записываться  0xFBA1
4040$:	BIT	#4,@R4		; Дискета защищена от записи?
	BEQ	4060$		; Нет
	BIS	#1,0(R3)	; Устан. признак ошибки - дискета защищена
	JMP	7116$		; Завершить операцию с ошибкой
4060$:	INC	30(R3)		; Установить признак записи
; Чтение без метки
; Позиционирование на нужную дорожку и определение длины сектора
4064$:	CALL	7354$		; Позиционирование на нужную дорожку
; Вход для чтения дорожки
4070$:	MOVB	44(R3),R0	; R0 = расш.часть адреса данных
	MOV	4(R3),R1	; R1 = младшая часть адреса данных
	CALL	7166$		; Преобраз. в формат "окна" (R2-адрес "окна")
	CALL	5442$		; Выбор прекорректора
	CALL	6022$		; Поиск первого попавшегося заголовка сектора
	BIC	#177774,R1	; R1 = код размера сектора
	BNE	4134$		; Он не равен нулю
	BIS	#40000,0(R3)	; Установить ошибку массива параметров
	JMP	7116$		; Завершить операцию с ошибкой
4134$:	MOVB	7654$(R1),56(R3); Номер последнего сектора на дорожке
	ASL	R1
	MOV	7644$(R1),12(R3); Размер сектора в словах
	CMPB	#4,45(R3)	; Запрошено чтение дорожки (код 4)?
	BNE	4166$		; Нет
	JMP	5546$		; Переход для чтения дорожки
4166$:	TST	R2		; Перешли за границу "окна"?
	BPL	4216$		; Нет
	ROR	R2		; На начало "окна"
	ADD	#401,@#177102	; Увеличить адрес старшей части "окна"
	BNE	4216$		; Еще не перешли границу памяти
	BIS	#4000,0(R3)	; Установить ошибку адреса в РСО
	JMP	7116$		; Завершить операцию с ошибкой
; Поиск заголовка нужного сектора
4216$:	MOVB	60(R3),57(R3)	; Установить счетчик оборотов для поиска
	CMP	6(R3),12(R3)	; Объем данных меньше размера сектора
	BLO	4242$		; Да
	CLR	26(R3)		; Размер хвоста = 0
	BR	4256$
4242$:	MOV	12(R3),26(R3)	; Размер_хвоста=размер_сектора-объем_данных
	SUB	6(R3),26(R3)
4256$:	BIS	#40,0(R3)	; Устан. заранее признак "сектор не найден"
	CALL	6262$		; Поиск маркера заголовка сектора
4270$:	TSTB	@R4		; Очередное слово сформировано?
	BPL	4270$		; Нет
	CMP	14(R3),@R5	; Счит.из загол.дор./ст. равна запрошенной
	BEQ	4320$		; Да
4302$:	MOV	12(R3),R0	; R0 = длина сектора
	ADD	#27,R0		; Прибавить GAP2,синхрозону,маркер,CRC
	CALL	7002$		; Пропустить информацию на диске
	BR	4256$		; На поиск сектора
4320$:	TSTB	@R4		; Очередное слово сформировано?
	BPL	4320$		; Нет
	MOV	@R5,R1		; R1 = номер сектора/длина сектора
	SWAB	R1
	CMPB	55(R3),R1	; Сравнить номер сектора с запрашиваемым
	BNE	4302$		; Не равны, на пропуск информации
	BIC	#40,0(R3)	; Сектор найден, сброс признака ошибки
	MOV	12(R3),R1	; R1 = размер сектора
	SUB	26(R3),R1	; Выч.длину хвоста,итого число слов для обмена
	CALL	6756$		; Проверить CRC
	BNE	4374$		; Все в порядке
	BIS	#2,0(R3)	; Ошибка CRC в заголовке
4370$:	JMP	7116$		; Завершить операцию с ошибкой
; Сектор найден - далее операция чтения/записи
4374$:	TST	30(R3)		; Установлен признак записи
	BNE	4650$		; Да
; Операции чтения
	CALL	6602$		; Поиск синхрозоны перед данными
	TST	32(R3)		; Поиск прошел успешно?
	BEQ	4432$		; Нет
	CALL	6636$		; Запустить команду поиска маркера
	MOV	#144,R0		; R0 = время ожидания маркера
4424$:	TSTB	@R4		; Маркер найден?
	BMI	4442$		; Да
	SOB	R0,4424$
4432$:	BIS	#20000,0(R3)	; Не обнаружен маркер данных
	BR	4370$		; Завершить операцию с ошибкой
4442$:	TST	@R5		; Сбросить готовность контроллера
4444$:	TSTB	@R4		; Очередное слово сформировано?
	BPL	4444$		; Нет
	MOV	@R5,R0		; R0 = тип данных
	CMP	#120773,R0	; Тип данных равен 0xA1FB (нормальные)?
	BNE	4470$		; Нет
	TSTB	61(R3)		; Стоит признак чтения с меткой?
	BEQ	4476$		; Нет - на чтение
	BR	4542$		; На следующий сектор
4470$:	CMP	#120770,R0	; Тип данных равен 0xA1F8 (метка) ?
	BNE	4432$		; Нет - ошибка
4476$:	MOV	R0,16(R3)	; Сохранить прочитанный маркер
	CALL	6672$		; Прочесть сектор
	CALL	6756$		; Проверить CRC
	BNE	4526$		; CRC в порядке
	BIS	#1,0(R3)	; Установить ошибку CRC в зоне данных
	JMP	7116$		; Завершить операцию с ошибкой
; Переход к следующему сектору для операций чтения/записи
4526$:	SUB	12(R3),6(R3)	; Вычесть длину сектора из длины данных
	BHI	4542$		; Еще осталась информация для обмена
	JMP	7124$		; Завершить операцию успешно
4542$:	INCB	55(R3)		; Увеличить номер запрашиваемого сектора
	CMPB	55(R3),56(R3)	; Он превысил максимальный номер?
	BLOS	4644$		; Нет
	BIT	#40,2(R3)	; Текущая сторона ВЕРХ?
	BNE	4574$           ; Да
	INC	14(R3)          ; Установить ВЕРХ в формате дорожка/сторона
	BR	4622$
4574$:	INCB	53(R3)          ; Увеличить номер запрашиваемой дорожки
	CALL	7354$		; Перейти на следующую дорожку
	MOVB	53(R3),14(R3)	; Установить дорожку в формате дорожка/сторона
	SWAB	14(R3)
	CLRB	14(R3)		; Установить НИЗ в формате дорожка/сторона
4622$:	MOVB	#1,55(R3)	; Номер запрашиваемого сектора - 1
	MOV	#40,R0
	XOR	R0,2(R3)	; Поменять сторону в копии РСН
	CALL	5442$		; Выбор прекорректора
4644$:	JMP	4166$		; На поиск следующего сектора
; Операции записи
4650$:	MOV	#13,R0		; R0 = размер GAP2
	MTPS	#340		; Запретить прерывания
	CALL	7232$		; Запись GAP2, синнхрозоны и маркера данных
4664$:	TSTB	@R4		; Контроллер готов для приема?
	BPL	4664$		; Нет
	MOV	(R2)+,@R5	; Передать первое слово данных в секторе
	MOV	2(R3),@R4	; Сбросить бит записи маркера
	DEC	R1		; Уменьшить число записываемых слов
	BEQ	4744$		; Все записано
4702$:	TST	R2		; Перешли за границу "окна"?
	BPL	4734$		; Нет
	ROR	R2		; На начало "окна"
	ADD	#401,@#177102	; Увеличить адрес старшей части "окна"
	BNE	4734$		; Еще не перешли границу памяти
	TST	@R5		; Перевести контроллер в режим чтения
	BIS	#4000,0(R3)	; Установить ошибку адреса в РСО
	JMP	7116$		; Завершить операцию с ошибкой
4734$:	TSTB	@R4		; Контроллер готов для приема?
	BPL	4734$		; Нет
	MOV	(R2)+,@R5	; Передать очередное слово данных
4742$:	SOB	R1,4702$
4744$:	MOV	26(R3),R1	; R1 = размер хвоста
	BEQ	4764$		; Его нет
4752$:	TSTB	@R4		; Контроллер готов для приема?
	BPL	4752$		; Нет
	MOV	#0,@R5		; Записать ноль в конце сектора (хвост)
	SOB	R1,4752$
4764$:	BIT	#40000,@R4	; CRC начала записываться?
	BEQ	4764$		; Нет
	MOV	#47116,@R5	; Перед.в контрол.слово для записи после CRC
4776$:	TSTB	@R4		; Контроллер готов для приема?
	BPL	4776$		; Нет
	TST	@R5		; Перевести контроллер в режим чтения
	MTPS	#0		; Разрешить прерывания
	BR	4526$		; На поиск следующего сектора
; Форматирование дорожки
5012$:	BIT	#4,@R4		; Дискета защищена от записи?
	BEQ	5032$		; Нет
	BIS	#1,0(R3)	; Установить ошибку - дискета защищена
5026$:	JMP	7116$		; Завершить операцию с ошибкой
5032$:	CALL	5442$		; Включить прекорректор
	SWAB	14(R3)
	MOVB	@10(R3),14(R3)	; Занести номер тек.дор. в дорожку/сторону
	BPL	5062$		; Номер определенный
	BIS	#20,0(R3)	; Установить ошибку поиска дорожки
	BR	5026$		; Завершить операцию с ошибкой
5062$:	MOVB	55(R3),R2	; R2 = длина сектора,сторона,номер диска
	ASR	R2		; Выделить длину сектора
	ASR	R2
	ASR	R2
	BIC	#177774,R2
	BNE	5112$		; Длина не равна нулю
	BIS	#40000,0(R3)	; Установить ошибку в массиве параметров
	BR	5026$		; Завершить операцию с ошибкой
5112$:	MOVB	7654$(R2),56(R3); Сохранить номер последнего сектора на дор.
	MOVB	7660$(R2),62(R3); Сохранить длину GAP3
	MOVB	7664$(R2),63(R3); Сохранить длину GAP4
	MOV	R2,R1
	ASL	R1
	MOV	7644$(R1),R1	; R1 = число слов в секторе
	SWAB	R2
	INC	R2		; R2 = длина сектора/номер сектора
	MOV	#1750,R0	; R0 = длина цикла при ожидании ИНДЕКСА
5154$:	TST	@R4		; Линия ИНДЕКС активна?
	BPL	5170$		; Нет
	SOB	R0,5154$	; Ожидать исчезновения сигнала ИНДЕКС
5162$:	TST	@R5		; Перевести контроллер в режим чтения
	JMP	7112$		; Выключить мотор и завершить с ошибкой
5170$:	MOV	#6200,R0	; R0 = длина дорожки с запасом (6400 байт)
	MOV	#47116,@R5	; Заполнить дорожку байтами 0x4E
5200$:	TST	@R4		; Линия ИНДЕКС активна?
	BMI	5220$		; Да
5204$:	TSTB	@R4		; Контроллер готов к приему?
	BPL	5204$		; Нет
	MOV	#47116,@R5	; Заполнить дорожку байтами 0x4E
	SOB	R0,5200$
	BR	5162$		; Ошибка - не появился ИНДЕКС
5220$:	MOV	#20,R0		; R0 = размер GAP1
	MOV	#177241,16(R3)	; Будет записываться маркер заголовка 0xFEA1
	MTPS	#340		; Запретить прерывания
5236$:	CALL	7232$		; Запись GAP, синхрозоны и маркера заголовка
5242$:	TSTB	@R4		; Контроллер готов к приему?
	BPL	5242$		; Нет
	MOV	14(R3),@R5	; Записать дорожку/сторону в заголовок
	MOV	2(R3),@R4	; Выключить запись маркера
5256$:	TSTB	@R4		; Контроллер готов к приему?
	BPL	5256$		; Нет
	MOV	R2,@R5		; Записать код длины/номер сектора в заголовок
	MOV	#13,R0		; R0 = длина GAP2
	MOV	#175641,16(R3)	; Будет записываться маркер данных 0xFBA1
5276$:	BIT	#40000,@R4	; CRC заголовка записана?
	BEQ	5276$		; Нет
	CALL	7232$		; Запись GAP2, синхрозоны и маркера данных
	MOV	R1,R0		; R0 = размер сектора в словах
5312$:	TSTB	@R4		; Контроллер готов к приему?
	BPL	5312$		; Нет
	MOV	34(R3),@R5	; Записать первое слово заполнителя
	MOV	2(R3),@R4	; Выключить запись маркера
	DEC	R0		; Уменьшить число записываемых слов
5330$:	TSTB	@R4		; Контроллер готов к приему?
	BPL	5330$		; Нет
	MOV	34(R3),@R5	; Записать заполнитель в цикле
	SOB	R0,5330$
	INC	R2		; Увеличить номер сектора
	MOVB	62(R3),R0	; R0 = размер GAP3 в словах
	MOV	#177241,16(R3)	; Далее записывается маркер заголовка 0xFEA1
5356$:	BIT	#40000,@R4	; CRC зоны данных записана?
	BEQ	5356$ 		; Нет
	DECB	56(R3)		; Уменьшить счетчик записываемых секторов
	BNE	5236$		; Еще не все - продолжим
5372$:	TSTB	@R4		; Контроллер готов к приему?
	BPL	5372$		; Нет
	MOV	#47116,@R5	; Записать 0x4E4E
	TST	@R4		; Линия ИНДЕКС активна?
	BPL	5372$		; Нет
	MOV	#5,R0		; После начала ИНДЕКСА записать 5 слов 0x4E4E
5412$:	TSTB	@R4		; Контроллер готов к приему?
	BPL	5412$		; Нет
	MOV	#47116,@R5	; Записать 0x4E4E
	SOB	R0,5412$
	TST	@R5		; Перевести контроллер в режим чтения
	MTPS	#0		; Разрешить прерывания
	SWAB	16(R3)
	JMP	7124$		; Завершить операцию успешно
; Подпрограмма включения прекорректора и выбора стороны в РСО
5442$:	CMPB	54(R3),@10(R3)	; Необходимо включить прекорректор?
	BHI	5462$		; Нет
	BIS	#2000,2(R3)	; Включить схему прекоррекции в копии РСН
	BR	5470$
5462$:	BIC	#2000,2(R3)	; Выключить схему прекоррекции в копии РСН
5470$:	MOV	2(R3),@R4	; Дать команду контроллеру
	BIT	#2000,0(R3)	; В РСО выбран ВЕРХ?
	BEQ	5534$		; Нет
	BIT	#40,2(R3)	; В копии РСН выбран ВЕРХ?
	BNE	5544$		; Да
5514$:	MOV	#310,R0		; Небольшая задержка
5520$:	SOB	R0,5520$
	MOV	#2000,R0	; Сменить сторону в РСО
	XOR	R0,0(R3)
	BR	5544$
5534$:	BIT	#40,2(R3)	; В копии РСН выбран ВЕРХ?
	BNE	5514$		; Да
5544$:	RETURN
; Чтение дорожки
5546$:	CLR	26(R3)		; Размер хвоста = 0
	MOV	#1750,R0	; R0 = длина ИНДЕКСА в цикле
5556$:	TST	@R4		; Линия ИНДЕКС активна?
	BPL	5574$		; Нет
	SOB	R0,5556$
5564$:	JMP	7112$		; Дискета не обнаружена (выкл.мотор и ошибка)
5570$:	JMP	7116$		; Завершить операцию с ошибкой
5574$:	MOV	#51010,R0	; R0 = длина дорожки в цикле
5600$:	TST	@R4		; Линия ИНДЕКС активна?
	BMI	5610$		; Да
	SOB	R0,5600$
	BR	5564$		; Дискета не обнаружена (выкл.мотор и ошибка)
5610$:	CALL	6550$		; Поиск маркера
	BMI	5626$		; Маркер найден
5616$:	BIS	#10000,0(R3)	; Ошибка - не обнаружен маркер заголовка
	BR	5570$		; Завершить операцию с ошибкой
5626$:	TST	@R5		; Пропустить 0xA1A1
5630$:	TSTB	@R4		; Очередное слово сформировано?
	BPL	5630$		; Нет
	CMP	#120776,@R5	; Это маркер заголовка сектора (0xA1FE)?
	BNE	5616$		; Нет - ошибка
	CALL	6072$		; Прочесть заголовок в R0 и R1
	CALL	6756$		; Проверить CRC
	BNE	5662$		; В норме
	BIS	#2,0(R3)	; Ошибка CRC заголовка
5662$:	MOV	12(R3),R1	; R1 = размер сектора в словах
	CALL	6550$		; Поиск маркера
	BMI	5704$		; Маркер найден
	BIS	#20000,0(R3)	; Ошибка - не найден маркер данных
	BR	5570$		; Завершить операцию с ошибкой
5704$:	TST	@R5		; Пропустить 0xA1A1
5706$:	TSTB	@R4		; Очередное слово сформировано?
	BPL	5706$		; Нет
	MOV	@R5,16(R3)	; Сохранить маркер
	CALL	6672$		; Прочесть сектор
	CALL	6756$		; Проверить CRC считанных данных
	BNE	5736$		; В порядке
	BIS	#1,0(R3)	; Ошибка CRC зоны данных
5736$:	DECB	56(R3)		; Уменьшить кол-во оставшихся секторов
	BNE	5610$		; На поиск очередного сектора
	BIT	#3,0(R3)	; Были ошибки CRC заголовка и данных?
	BNE	5570$		; Да - завершить с ошибкой
	JMP	7124$		; Завершить операцию успешно
; Поиск заголовка сектора
5760$:	CALL	5470$		; Установить сторону в РСО
	MOVB	44(R3),R0	; R0 = расш.часть адреса данных
	MOV	4(R3),R1	; R1 = младшая часть адреса данных
	CALL	7166$		; Преобраз. в формат "окна" (R2-адрес "окна")
	CALL	6022$		; Поиск первого заголовка сектора и его чтение
	CALL	6110$		; Передать сторону/дорожку в ОЗУ вычислителя
	MOV	R1,R0		; R0 = номер сектора/код длины
	CALL	6110$		; Передать номер/код в ОЗУ вычислителя
	JMP	7124$		; Завершить операцию успешно
; П/п поиска первого попавшегося заголовка и его чтение в R0 и R1
6022$:	MOVB	60(R3),57(R3)	; Количество оборотов для поиска
	BIS	#10000,0(R3)	; Заранее ошибка - маркер заголовка не найден
6036$:	CALL	6262$		; Поиск маркера заголовка
	CALL	6072$		; Чтение заголовка в R0 и R1
	BIS	#2,0(R3)	; Заранее ошибка CRC заголовка
	CALL	6756$		; Проверить CRC заголовка
	BEQ	6036$		; Неверная CRC - ищем дальше
	BIC	#2,0(R3)	; Сбросить ошибку CRC в РСО
	RETURN
; П/п чтения заголовка в R0 и R1. В R0 номер дорожки (ст.байт) и номер стороны.
; В R1 - номер сектора и код длины сектора.
6072$:	TSTB	@R4		; Очередное слово сформировано?
	BPL	6072$		; Нет
	MOV	@R5,R0		; R0 = номер дорожки/номер стороны
6100$:	TSTB	@R4		; Очередное слово сформировано?
	BPL	6100$		; Нет
	MOV	@R5,R1		; R1 = номер сектора/код длины
	RETURN
; П/п передачи слова в ОЗУ вычислителя. Передаваемое слово в R0.
; Адрес для передачи в ячейке 177102 и R2.
6110$:	TST	R2		; Перешли за границу "окна"?
	BPL	6140$		; Нет
	ROR	R2		; На начало "окна"
	ADD	#401,@#177102	; Увеличить адрес старшей части "окна"
	BNE	6140$		; Еще не перешли границу памяти
	BIS	#4000,0(R3)	; Установить ошибку адреса в РСО
	JMP	7116$		; Завершить операцию с ошибкой
6140$:	MOV	R0,(R2)+	; Передать слово в ОЗУ вычислителя
6142$:	RETURN
; Обработка функции установки параметров SET
6144$:	CLR	R2
	MOVB	R1,R0		; R0 = значение параметра
	SWAB	R1
	BIC	#177774,R1	; R1 = номер параметра
	CMP	#3,R1		; Номер равен 3 (дорожка вкл. прекоррекции)?
	BNE	6172$		; Нет
	MOVB	R0,54(R3)	; Установить параметр
	BR	6252$		; Завершить операцию
6172$:	BIC	#177740,R0	; В значении использ. только 5 бит
	BNE	6214$		; Не равно нулю
	BIS	#40000,0(R3)	; Ошибка массива параметров
	MOV	#100040,R1	; Установить биты ERR и DONE
	BR	6256$		; Завершить операцию
6214$:	ADD	#1160,R2	; 3 мс примерно 624 цикла SOB
	SOB	R0,6214$
	ASR	R1		; Номер равен 1?
	BCC	6234$		; Нет
	MOV	R2,20(R3)	; Установить время опускания головки
	BR	6252$
6234$:	ASR	R1		; Номер равен 2?
	BCC	6246$		; Нет
	MOV	R2,22(R3)	; Установить время подъема головки
	BR	6252$
6246$:	MOV	R2,24(R3)	; Установить время шага
6252$:	MOV	#40,R1		; Установить бит DONE
6256$:	JMP	2716$		; На цикл приема очередной команды
; Подпрограмма поиска маркера заголовка сектора
6262$:	MOV	#12,R0		; Небольшая пауза и перевод контроллера
6266$:	TST	@R5		; в режим чтения
	SOB	R0,6266$
; Пропуск нулей и 177777 при неактивном ИНДЕКСЕ
6272$:	MOV	#51010,R1	; R1 = длина дорожки в цикле
6276$:	TST	@R4		; Линия ИНДЕКС активна?
	BMI	6356$		; Да
	MOV	@R5,R0		; Считанное слово равно нулю?
	BEQ	6312$		; Да
	INC	R0		; Считанное слово равно 177777?
	BNE	6336$		; Нет
6312$:	SOB	R1,6276$	; Цикл по пропуску нулей
6314$:	BIC	#10000,0(R3)	; Сброс ошибки необнаружения маркера заголовка
	JMP	7112$		; Дискета не обнаружена (выкл.мотор и ошибка)
6326$:	JMP	7116$		; Завершить операцию с ошибкой
; Пропуск не нулей при неактивном ИНДЕКСЕ
6332$:	MOV	#51010,R1	; R1 = длина дорожки в цикле
6336$:	TST	@R4		; Линия ИНДЕКС активна?
	BMI	6410$		; Да
	MOV	@R5,R0		; Считанное слово равно нулю?
	BEQ	6442$		; Да
	INC	R0		; Считанное слово равно 177777?
	BEQ	6442$		; Да
	SOB	R1,6336$	; Цикл по пропуску не нулей
	BR	6314$		; Нет дискеты - ошибка
; Пропуск нулей и 177777 при активном ИНДЕКСЕ
6356$:	DECB	57(R3)		; Уменьшить счетчик оставшихся оборотов
	BEQ	6326$		; Маркер не найден за 5 оборотов
	MOV	#1750,R1	; R1 = длина ИНДЕКСА в цикле
6370$:	TST	@R4		; Линия ИНДЕКС активна?
	BPL	6272$		; Нет
	MOV	@R5,R0		; Считанное слово равно нулю?
	BEQ	6404$		; Да
	INC	R0		; Считанное слово равно 177777?
	BNE	6422$		; Нет
6404$:	SOB	R1,6370$	; Цикл по пропуску нулей
	BR	6314$		; Нет дискеты - ошибка
; Пропуск не нулей при активном ИНДЕКСЕ
6410$:	MOV	#1750,R1	; R1 = длина ИНДЕКСА в цикле
	DECB	57(R3)		; Уменьшить счетчик оставшихся оборотов
	BEQ	6326$		; Маркер не найден за 5 оборотов
6422$:	TST	@R4		; Линия ИНДЕКС активна?
	BPL	6332$		; Нет
	MOV	@R5,R0		; Считанное слово равно нулю?
	BEQ	6442$		; Да
	INC	R0		; Считанное слово равно 177777?
	BEQ	6442$		; Да
	SOB	R1,6422$	; Цикл по пропуску не нулей
	BR	6314$		; Нет дискеты - ошибка
; Удостоверение в том, что попали на синхрозону
6442$:	MOV	#3,32(R3)	; Счетчик для удостоверения
6450$:	MOV	@R5,R0		; Считанное слово равно нулю?
	BEQ	6460$		; Да
	INC	R0		; Считанное слово равно 177777?
	BNE	6504$		; Нет - не синхрозона
6460$:	DEC	32(R3)		; Уменьшить счетчик
	BNE	6450$		; Продолжаем дальше
; Поиск и ожидание маркера
	CALL	6636$		; Дать команду на поиск маркера
	MOV	#24,R0		; R0 = счетчик ожидания маркера
6476$:	TSTB	@R4		; Маркер найден?
	BMI	6512$		; Да
	SOB	R0,6476$	; Цикл ожидания маркера
; Маркер не найден - на поиск нулей
6504$:	TST	@R4		; Линия индекс активна?
	BPL	6312$		; На пропуск нулей при неактивном ИНДЕКСЕ
	BR	6404$		; На пропуск нулей при активном ИНДЕКСЕ
; Определение типа найденного маркера
6512$:	TST	@R5		; Пропустить 0xA1A1
6514$:	TSTB	@R4		; Очередное слово сформировано?
	BPL	6514$		; Нет
	CMP	#120776,@R5	; Это маркер заголовка (0xA1FE)?
	BEQ	6540$		; Да
	MOV	12(R3),R0	; R0 = длина сектора в словах
	CALL	7002$		; Пропуск зоны данных
	BR	6262$		; Продолжить поиск сначала
6540$:	BIC	#10000,0(R3)	; Сброс ошибки - маркер заголовка найден
	RETURN
; Поиск маркера из промежутка GAP (контроллер в режиме формирования данных)
6550$:	CALL	6602$		; Пропуск GAP (ожидание синхрозоны)
	TST	32(R3)		; Синхрозона найдена?
	BEQ	6600$		; Нет
	CALL	6636$		; Дать команду на поиск маркера
	MOV	#50,R0		; Счетчик ожидания маркера
6572$:	TSTB	@R4		; Маркер найден
	BMI	6600$		; Да (установлен бит N)
	SOB	R0,6572$	; Цикл ожидания маркера
6600$:	RETURN
; Подпрограмма пропуска промежутка до синхрозоны
6602$:	TST	@R5		; Перевести контроллер в режим чтения
	MOV	#106,32(R3)	; Предполагаемый максимальный размер GAP
6612$:	TSTB	@R4		; Очередное слово сформировано?
	BPL	6612$		; Нет
	MOV	@R5,R0		; Прочитанное слово равно нулю?
	BEQ	6634$		; Да - вышли на синхрозону
	INC	R0		; Прочитанное слово равно 177777?
	BEQ	6634$		; Да - вышли на синхрозону
	DEC	32(R3)		; Уменьшить счетчик
	BNE	6612$
6634$:	RETURN
; Подпрограмма подачи команды контроллеру на поиск маркера
6636$:	BIS	#400,2(R3)	; Установить в копии РСН бит GOR
	MOV	2(R3),@R4	; Дать команду контроллеру
	BIC	#400,2(R3)	; Снять в копии РСН бит GOR
	MOV	#10,R0		; Небольшая пауза
6662$:	SOB	R0,6662$
	MOV	2(R3),@R4	; Дать команду контроллеру
	RETURN
; Подпрограмма чтения сектора
6672$:	TST	R2		; Перешли за границу "окна"?
	BPL	6722$		; Нет
	ROR	R2		; На начало "окна"
	ADD	#401,@#177102	; Увеличить адрес старшей части "окна"
	BNE	6722$		; Еще не перешли границу памяти
	BIS	#4000,0(R3)	; Установить ошибку адреса в РСО
	JMP	7116$		; Завершить операцию с ошибкой
6722$:	TSTB	@R4		; Очередное слово сформировано?
	BPL	6722$		; Нет
	MOV	@R5,R0		; Прочесть слово
	SWAB	R0		; Обменять байты
	MOV	R0,(R2)+	; Передать слово в ОЗУ вычислителя
6734$:	SOB	R1,6672$
	MOV	26(R3),R1	; R1 = размер хвоста
	BEQ	6754$		; Равен нулю
6744$:	TSTB	@R4		; Очередное слово сформировано?
	BPL	6744$		; Нет
	TST	@R5		; Пропустить слово
	SOB	R1,6744$
6754$:	RETURN
; Подпрограмма проверки CRC
6756$:	MOV	#17,32(R3)	; Установить счетчик ожидания
6764$:	BIT	#40000,@R4	; CRC корректна?
	BNE	7000$		; Да
	DEC	32(R3)		; Уменьшить счетчик
	BNE	6764$		; Не равен нулю - ждем
7000$:	RETURN
; П/п пропуска заданного кол-ва слов (контроллер в режиме формир. данных)
7002$:	TST	@R4		; Активна линия ИНДЕКС?
	BMI	7044$		; Да
7006$:	TST	@R4		; Активна линия ИНДЕКС?
	BMI	7024$		; Да
7012$:	TSTB	@R4		; Очередное слово сформировано?
	BPL	7006$		; Нет
	TST	@R5		; Пропустить слово
	SOB	R0,7006$	; Цикл по пропуску
	BR	7060$		; Завершить
7024$:	DECB	57(R3)		; Уменьшить счетчик оборотов диска
	BNE	7050$		; Не равен нулю - продолжаем
	BIS	#40,0(R3)	; Ошибка - сектор не найден
	JMP	7116$		; Завершить операцию с ошибкой
7044$:	TST	@R4		; Активна линия ИНДЕКС?
	BPL	7012$		; Нет
7050$:	TSTB	@R4		; Очередное слово сформировано?
	BPL	7044$		; Нет
	TST	@R5		; Пропустить слово
	SOB	R0,7044$	; Цикл по пропуску
7060$:	RETURN
; Подпрограмма выключения мотора
7062$:	BIC	#37,2(R3)	; Сброс.в копии РСН биты выбора прив.и мотора
	MOV	2(R3),@R4	; Выключить мотор
	BIC	#200,0(R3)	; Дискета не вращается
	MOV	22(R3),R0	; R0 = время подъема головки
7106$:	SOB	R0,7106$	; Ожидание подъема головки
	RETURN
; Точка входа при завершении с ошибкой и выключении мотора
7112$:	CALL	7062$		; Выключить мотор
; Точка входа при завершении с ошибкой
7116$:	MOV	#100000,R1	; Установить в R1 бит ERR
	BR	7126$
; Точка входа при успешном завершении операции
7124$:	CLR	R1		; Нет ошибок
7126$:	TST	30(R3)		; Была операция чтения?
	BEQ	7140$		; Да
	SWAB	16(R3)		; Обменять байты прочитанного маркера
7140$:	CMP	#120770,16(R3)	; Был прочитан/записан маркер метки (0xA1F8)?
	BNE	7156$		; Нет
	BIS	#100,0(R3)	; Был прочитан/записан сектор с меткой
7156$:	BIS	#40,R1		; Установить в R1 бит DONE
	JMP	2716$		; На передачу результата и прием след. команды
; Подпрограмма преобразования 22-разрядного адреса в формат "окна".
; Младшие 14 битов содержаться в регистре R2, старшие 8 - в РД 177102 и R1
; При входе в R1 - младшие 16 бит, в R0 - старшие 6 бит
7166$:	MOV	R1,R2		; R2 = младшие 16 бит
	BIC	#140000,R2	; Оставить 14 бит
	BIS	#40000,R2	; Установить бит 14 - адрес начала "окна"
	ASL	R0		; Получить в R0 старшие 8 бит
	ASL	R1
	ADC	R0
	ASL	R0
	ASL	R1
	ADC	R0
	MOVB	R0,R1           ; Перед.ст.8 бит в младший и старший байты R1
	SWAB	R1
	CLRB	R1
	BISB	R0,R1
	MOV	R1,@#177102	; Записать адрес старшей части "окна"
	RETURN
; П/п записи промежутка, синхрозоны и маркера. В R0 - длина промежутка.
7232$:	MOV	#47116,@R5	; Записать слово промежутка (0x4E4E)
7236$:	TSTB	@R4		; Контроллер готов к приему?
	BPL	7236$		; Нет
	MOV	#47116,@R5	; Запись промежутка словом 0x4E4E
	SOB	R0,7236$	; Цикл записи промежутка
	MOV	#6,R0		; R0 - размер синхрозоны
7254$:	TSTB	@R4		; Контроллер готов к приему?
	BPL	7254$		; Нет
	MOV	#0,@R5		; Запись синхрозоны
	SOB	R0,7254$	; Цикл записи синхрозоны
	BIS	#1000,2(R3)	; Установить в копии РСН бит записи маркера
7274$:	TSTB	@R4		; Контроллер готов к приему?
	BPL	7274$		; Нет
	MOV	#120641,@R5	; Записать 0xA1A1
	MOV	2(R3),@R4	; Передать команду контроллеру
	BIC	#1000,2(R3)	; Сбросить в копии РСН бит записи маркера
7316$:	TSTB	@R4		; Контроллер готов к приему?
	BPL	7316$		; Нет
	MOV	16(R3),@R5	; Записать маркер
	RETURN
; Исполнение функции SEEK
7330$:	TSTB	53(R3)		; Запрошено позиционир. на нулевую дорожку
	BNE	7344$		; Нет
	CALL	7572$		; Позиционирование на нулевую дорожку
	BR	7350$
7344$:	CALL	7354$		; Позиционирование на запрошенную дорожку
7350$:	JMP	7124$
; Подпрограмма позиционирования на запрошенную дорожку
7354$:	TSTB	@10(R3)		; Номер дорожки определенный?
	BPL	7366$		; Да
	CALL	7572$		; Позиционирование на нулевую дорожку
7366$:	CMPB	@10(R3),53(R3)	; Запрошенная и текущая дорожки равны?
	BEQ	7414$		; Да - возврат
	BHI	7406$		; Запрошенная меньше
	CALL	7424$		; На шаг вперед
	BR	7366$		; Продолжить дальше
7406$:	CALL	7464$		; На шаг назад
	BR	7366$		; Продолжить дальше
7414$:	MOV	#23420,R0	; Пауза в 48 мс
7420$:	SOB	R0,7420$
	RETURN
; Шаг вперед
7424$:	INCB	@10(R3)		; Увеличить номер дорожки
	BMI	7452$		; Больше 127 - ошибка
	BIT	#100,2(R3)	; Стоит направление к центру?
	BNE	7530$		; Да - сделать шаг
	BIS	#100,2(R3)	; Установить в копии РСН направ.к центру
	BR	7522$		; Сделать шаг
7452$:	BIS	#20,0(R3)	; Ошибка - нет позиционирования на дорожку
	JMP	7116$		; Завершить операцию с ошибкой
; Шаг назад
7464$:	DECB	@10(R3)		; Уменьшить номер дорожки
7470$:	BIT	#1,@R4		; Стоим на нулевой дорожке?
	BEQ	7504$		; Нет
	CLRB	@10(R3)		; Текущая дорожка - нулевая
	RETURN
7504$:	BIT	#100,2(R3)	; Стоит направление от центра?
	BEQ	7530$		; Да - сделать шаг
	BIC	#100,2(R3)	; Установить в копии РСН направ.от центра
7522$:	MOV	#310,R0		; Время ожидания при смене направления
	BR	7534$
7530$:	MOV	#1,R0		; Время ожидания при том же направлении
7534$:	MOV	2(R3),@R4	; Известить контроллер о направлении
7540$:	SOB	R0,7540$	; Цикл ожидания
	BIS	#200,2(R3)	; Установить бит шага в копии РСН
	MOV	2(R3),@R4	; Сделать шаг
	MOV	24(R3),R0	; R0 = время шага
	BIC	#200,2(R3)	; Сбросить бит шага в копии РСН
7566$:	SOB	R0,7566$	; Цикл ожидания
	RETURN
; Подпрограмма позиционирования на нулевую дорожку
7572$:	MOVB	#200,@10(R3)	; Установить неопределенный номер (128 попыток)
7600$:	CALL	7470$		; Сделать шаг назад
	BIT	#1,@R4		; Достигли нулевой дорожки
	BNE	7632$		; Да
	DECB	@10(R3)		; Уменьшить кол-во попыток
	BNE	7600$		; Продолжаем дальше
	BIS	#10,0(R3)	; Ошибка - нет позиционирования на 0-ю дор.
	JMP	7116$		; Завершить операцию с ошибкой
7632$:	CLRB	@10(R3)		; Текущая дорожка - нулевая
	RETURN
; Устанавливаемые биты выбора привода в копии РСН
7640$:	.BYTE	1,2,4,10
; Размер сектора в словах для форматов x, 256, 512, 1024 байта
7644$:	.WORD	0,200,400,1000
; Кол-во секторов на дорожке для форматов x, 256, 512, 1024 байта
7654$:	.BYTE	0,20,12,5
; Размер промежутка GAP3 для форматов x, 256, 512, 1024 байта
7660$:	.BYTE	0,33,22,72
; Размер промежутка GAP4 для форматов x, 256, 512, 1024 байта
7664$:	.BYTE	0,240,124,242

	.=10000

; Точка начального пуска
10000$:	MTPS	#340		; Запретить прерывания
	MOV	#23000,@#177760	; Настройка 1809РУ1 на адрес 20000
	CLR	PC		; Переход на адрес 0
10014$:	.WORD	74104		; Контрольная сумма ПЗУ (0-10012)

	.=20000
	.=.-2
	.WORD	0
	.END	10000$
